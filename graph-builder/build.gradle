buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}

plugins {
    id 'java'
    id 'application'
}
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.github.lucacampanella'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

repositories {
    mavenCentral()
//    maven {
//        url 'http://maven.inria.fr/artifactory/spoon-public-snapshot'
//    }
    mavenLocal()

    flatDir {
        dirs 'libs'
    }
}

dependencies {

    //compile "ch.adnovum.sb4b:corda-flow-base:0.2.1903271115"
    implementation "$corda_release_group:corda-core:$corda_release_version"
    implementation "fr.inria.gforge.spoon:spoon-core:$spoon_version"

    //FIXME: we should depend on the thing they should publish on the remote repo, bu have not done yet
    implementation "org.jboss.windup.decompiler.fernflower:fernflower:2.5.0.Final"
    implementation "org.benf:cfr:0.135"
    implementation name: 'spoon-decompiler-0.1.0-SNAPSHOT'//"fr.inria.gforge.spoon:spoon-decompiler:0.1.0-SNAPSHOT"

    implementation "org.jfree:jfreesvg:3.4"

    //testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation('org.junit.jupiter:junit-jupiter:5.4.2')
    testImplementation("org.assertj:assertj-core:3.11.1")
    testImplementation project(":test-utils").sourceSets.test.output
}

application {
    mainClassName = 'com.github.lucacampanella.callgraphflows.Main'
}

//processResources {
//    from("./src/main/java/com/github/lucacampanella/callgraphflows/staticanalyzer/matchers/MatcherContainer.java")
//}


task copyTestJarToResources(type: Copy) {
    //println sourceSets.test.resources.srcDirs
    //println sourceSets.test.output.resourcesDir
    from buildDir.toURI().toURL().toString() + "/libs/JarAnalyzerTestJar-" + version + ".jar";
    //into sourceSets.test.output.resourcesDir
    into "./src/test/resources/"
}

task createTestJar(type: Jar) {
    baseName = "JarAnalyzerTestJar"
    from {
        sourceSets.test.output
        //configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    include '**/testclasses/subclassestests/*.class'
    //include '**/testclasses/ExtendingSuperclassTestFlow.class'
    //include '**/InitiatorBaseFlow.class'
    //include '**/DoubleExtendingSuperclassTestFlow.class'
    jar.includeEmptyDirs false
    //with jar
}
copyTestJarToResources.dependsOn(createTestJar)
build.dependsOn(copyTestJarToResources)


tasks.withType(JavaCompile) {
    doFirst {
        project.copy {
            from "./src/main/java/com/github/lucacampanella/callgraphflows/staticanalyzer/matchers/MatcherContainer.java"
            into "./src/main/resources/"
        }
    }
}